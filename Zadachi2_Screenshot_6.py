class Авиакомпания:
    def __init__(self):
        self.список_самолетов = []
        self.список_маршрутов = []

    def добавить_самолет(self, самолет):
        self.список_самолетов.append(самолет)

    def удалить_самолет(self, модель):
        for самолет in self.список_самолетов:
            if самолет.модель == модель:
                self.список_самолетов.remove(самолет)
                return
        print("Самолет с такой моделью не найден")

    def создать_маршрут(self, маршрут):
        self.список_маршрутов.append(маршрут)

    def удалить_маршрут(self, номер):
        for маршрут in self.список_маршрутов:
            if маршрут.номер == номер:
                self.список_маршрутов.remove(маршрут)
                return
        print("Маршрут с таким номером не найден")

    def найти_самолет_по_модели(self, модель):
        for самолет in self.список_самолетов:
            if самолет.модель == модель:
                return самолет
        return None

    def найти_доступные_маршруты(self, город):
        доступные_маршруты = []
        for маршрут in self.список_маршрутов:
            if маршрут.город_отправления == город or маршрут.город_прибытия == город:
                доступные_маршруты.append(маршрут)
        return доступные_маршруты

авиакомпания = Авиакомпания()

авиакомпания.добавить_самолет(Самолет("Boeing 737", 150))
авиакомпания.добавить_самолет(Самолет("Airbus A320", 180))

авиакомпания.создать_маршрут(Маршрут(1, "Москва", "Санкт-Петербург"))
авиакомпания.создать_маршрут(Маршрут(2, "Санкт-Петербург", "Сочи"))

найденный_самолет = авиакомпания.найти_самолет_по_модели("Boeing 737")
print(найденный_самолет) 

доступные_маршруты = авиакомпания.найти_доступные_маршруты("Москва")
print(доступные_маршруты) 

авиакомпания.удалить_самолет("Airbus A320")

авиакомпания.удалить_маршрут(2)
